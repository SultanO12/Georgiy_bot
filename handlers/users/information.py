from aiogram import types
from aiogram.dispatcher import FSMContext
from loader import dp, db, bot
from keyboards.default.main import *
from keyboards.inline.contect_info import admin_markup
from keyboards.inline.check_info import check_markup
from states.getinfo import *


@dp.message_handler(text="üîª–ú–µ–Ω—é", state='*')
async def main_menu(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer_photo("AgACAgIAAxkBAAIC2GSgd4G0D6K2uKmGe4dFLjZNGAZeAALxvjEbXxIJS1e-NrszQ92sAQADAgADeQADLwQ", reply_markup=main_markup)

@dp.message_handler(text="üõé –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", state='*')
async def do_boron(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: üëá", reply_markup=ReplyKeyboardRemove())
    await message.answer("‚¨áÔ∏è")

    await GetInfoBron.full_name.set()

@dp.message_handler(state=GetInfoBron.full_name)
async def get_name(message: types.Message, state: FSMContext):
    name = message.text
    
    await state.update_data({"name":name})
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä: üëá")
    await message.answer("‚¨áÔ∏è")

    await GetInfoBron.phone_num.set()

@dp.message_handler(state=GetInfoBron.phone_num)
async def get_phone(message: types.Message, state: FSMContext):
    phone_num = message.text
    
    await state.update_data({"phone_num":phone_num})
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 15 –ò—é–ª—è üëá", reply_markup=check_date)
    await message.answer("‚¨áÔ∏è")

    await GetInfoBron.date.set()

@dp.message_handler(state=GetInfoBron.date)
async def get_date(message: types.Message, state: FSMContext):
    date = message.text
    
    await state.update_data({"date":date})
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π: üëá", reply_markup=ReplyKeyboardRemove())
    await message.answer("‚¨áÔ∏è")

    await GetInfoBron.count_perosons.set()

@dp.message_handler(state=GetInfoBron.count_perosons)
async def get_count(message: types.Message, state: FSMContext):
    count_perosons = message.text
    
    await state.update_data({"count_perosons":count_perosons})

    data = await state.get_data()
    name = data['name']
    phone_num = data['phone_num']
    date = data['date']

    await message.answer(f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä: {phone_num}\n–î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {date}\n–í—Å–µ–≥–æ –ª—é–¥–µ–π: {count_perosons}", reply_markup=check_markup)

    await GetInfoBron.check.set()

@dp.callback_query_handler(text=['yes', 'no'], state=GetInfoBron.check)
async def cheking(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()
    data = await state.get_data()
    name = data['name']
    phone_num = data['phone_num']
    date = data['date']
    count_perosons = data['count_perosons']

    if call.data == 'yes':
        chat_id = '-900586245'

        msg = f"–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä: {phone_num}\n–î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {date}\n–í—Å–µ–≥–æ –ª—é–¥–µ–π: {count_perosons}"
        await bot.send_message(chat_id=chat_id, text=msg)
        
        await state.finish()
        await call.message.answer("–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –Ω–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã! ‚úÖ", reply_markup=main_markup)
        await call.message.answer_photo("AgACAgIAAxkBAAIC2GSgd4G0D6K2uKmGe4dFLjZNGAZeAALxvjEbXxIJS1e-NrszQ92sAQADAgADeQADLwQ")
    else:
        await state.finish()

        await call.message.answer("–ó–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–∞!", reply_markup=main_markup)
        await call.message.answer_photo("AgACAgIAAxkBAAIC2GSgd4G0D6K2uKmGe4dFLjZNGAZeAALxvjEbXxIJS1e-NrszQ92sAQADAgADeQADLwQ")

@dp.message_handler(text="üîô –ù–∞–∑–∞–¥", state=GetInfoHoms.home_photos)
@dp.message_handler(text="üè° –î–æ–º–∏–∫–∏", state='*')
async def do_homs(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer("–£ –Ω–∞—Å –µ—Å—Ç—å, –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è", reply_markup=homs_cat_markup)
    await GetInfoHoms.home_name.set()

@dp.message_handler(state=GetInfoHoms.home_name)
async def get_name(message: types.Message, state: FSMContext):
    homs = await db.select_all_infomation()

    for home in homs:
        if message.text == str(home['title']):
            photos = home['photos'].split()
            caption = home['caption']
            caption = caption.replace("\\n", '\n')
            await message.answer_photo(photos[0], caption=home['title'], reply_markup=getinfo_markup)
            await message.answer(caption)
            
            await state.update_data({"home_name":message.text})
            await GetInfoHoms.home_photos.set()



@dp.message_handler(text="–°–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", state=GetInfoHoms.home_photos)
async def do_home_potos(message: types.Message, state: FSMContext):
    data = await state.get_data()
    home_name = data['home_name']
    homs = await db.select_all_infomation()

    for home in homs:
        if home_name == home['title']:
            photos = home['photos'].split()[1:]
            for photo in photos:
                await message.answer_photo(photo, reply_markup=nav_markup)


@dp.message_handler(text="ü•≥ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ", state='*')
async def do_raz(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –≥–ª–µ–º–ø–∏–Ω–≥-–ø–∞—Ä–∫–∞ ¬´–ù–ê–ó–í–ê–ù–ò–ï¬ª\n\n‚õ± –ó–æ–Ω–∞ –æ—Ç–¥—ã—Ö–∞ —É –≤–æ–¥—ã —Å –Ω–∞—Å—ã–ø–Ω—ã–º –ø–µ—Å–∫–æ–º;\nüèê –í–æ–ª–µ–π–±–æ–ª—å–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏;\nüå≥ –õ–µ—Å–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏;\nüé£ –£–¥–æ—á–∫–∏ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏;\n\n–ê –µ—â–µüëá", reply_markup=raz_cat_markup)

@dp.message_handler(text="üçΩ –ì–¥–µ –ø–æ–µ—Å—Ç—å", state='*')
async def do_food(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer_photo("AgACAgIAAxkBAAIDCmSggB-Ot7Mk3664bMuxoL0g8wtFAAKu0DEbG8cBSZu0EzNj9qk3AQADAgADeQADLwQ", caption="–í –∫–∞–∂–¥–æ–º —à–∞–ª–µ –µ—Å—Ç—å –º–∏–Ω–∏ –∫—É—Ö–Ω—è. –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫, —ç–ª–µ–∫—Ç—Ä–æ –ø–ª–∏—Ç–∞, —á–∞–π–Ω–∏–∫, –≤—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –ø–æ—Å—É–¥–∞, –∫—Ä—É–ø—ã, —á–∞–π, –∫–æ—Ñ–µ. –ü–µ—Ä–µ–¥ —à–∞–ª–µ –º–∞–Ω–≥–∞–ª, —Ä–µ—à–µ—Ç–∫–∞. –ú–æ–∂–Ω–æ –ø—Ä–∏–≤–µ–∑—Ç–∏ —É–≥–æ–ª—å, —Ä–æ–∑–∂–∏–≥ –∏ –≥–æ—Ç–æ–≤–∏—Ç—å —à–∞—à–ª—ã–∫. –ò–ª–∏ –ø–æ –¥–æ—Ä–æ–≥–µ –∫—É–ø–∏—Ç—å –≥–æ—Ç–æ–≤—É—é –µ–¥—É.\n\n–¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≥–æ—Ç–æ–≤—É—é –µ–¥—É —É –Ω–∞—Å (–º–µ–Ω—é —É—Ç–æ—á–Ω—è–π—Ç–µ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞) üòä", reply_markup=food_cat_markup)

@dp.message_handler(text="üôè –û—Ç–∑—ã–≤—ã", state='*')
async def do_coment(message: types.Message, state: FSMContext):
    await state.finish()
    
    await message.answer("–ï—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏—Ç–µ –Ω–∞–º –æ—Ç–∑—ã–≤, –º—ã –±—É–¥–µ–º –≤–∞–º –æ—á–µ–Ω—å –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã, —Ç–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞–º, –º—ã —Å–º–æ–∂–µ–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ üí™", reply_markup=coment_markup)

@dp.message_handler(text="‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤", state='*')
async def do_coment(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer("–ñ–¥–µ–º –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è \nüëá", reply_markup=ReplyKeyboardRemove())
    await message.answer("‚¨áÔ∏è‚Å£")

    await GetComent.coment.set()

@dp.message_handler(state=GetComent.coment)
async def get_coment(message: types.Message, state: FSMContext):
    chat_id = '-969985850'

    if message.text:
        msg = f"<b>–ò–º—è:</b> {message.from_user.full_name}\n<b>User Name:</b> @{message.from_user.username}\n<b>Telegram ID:</b> {message.from_user.id}\n\n<b>–û—Ç–∑—ã–≤:</b> <i>{message.text}</i>"
        await bot.send_message(chat_id=chat_id, text=msg)

        await state.finish()
        await message.answer("üôè –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å, –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–ª—É–∂–±—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∑–∞–±–æ—Ç—ã", reply_markup=main_markup)
        await message.answer_photo("AgACAgIAAxkBAAIC2GSgd4G0D6K2uKmGe4dFLjZNGAZeAALxvjEbXxIJS1e-NrszQ92sAQADAgADeQADLwQ")

@dp.message_handler(text="üì≤ –ö–æ–Ω—Ç–∞–∫—Ç—ã", state='*')
async def do_contact(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã\n\n–û—Ç–¥–µ–ª –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\nüì≤ +7(905)641-84-20\nüì≤ +7(920)897-05-55\nüì© glamping40@yandex.ru\nüåê na-krayu-zemli.ru/\n\n–ì—Ä—É–ø–ø–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ\nhttps://vk.com/splav_na_bajdarkah\n\nüì≤  +7(905)641-84-20 (—Ç–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"–ù–∞ –∫—Ä–∞—é –∑–µ–º–ª–∏\")\n\nüìç–ù–∞—à –∞–¥—Ä–µ—Å: –†–æ—Å—Å–∏—è, –ü–∞–Ω–æ—Ä–∞–º–Ω–∞—è –¥–æ–ª–∏–Ω–∞, –¥–æ–º 1, –Æ–¥–∏–Ω–∫–∏.", disable_web_page_preview=True, reply_markup=admin_markup)

@dp.message_handler(content_types=['photo'])
async def get_file_id(message: types.Message):
    print(message.photo[-1]['file_id'])